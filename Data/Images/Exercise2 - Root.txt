f = open("../Data/poem.txt", "r", encoding="latin1")
poem = f.read()

# In this exercise, you need to identify the line number (e.g., "1.1", or "5.4") of the poem line that meets this condition

#

# If several lines meet this condition, indicate only the first line

answer = ""  # Write down the algorithm that will make this variable take the required line number

python = TT = ""
     ...: for index, row in df.loc[df.Type != "DMI"].iterrows():
     ...:     most = 0
     ...:     mostl = ""
     ...:     for line in poem.split("\n"):
     ...:              var = len(re.findall(row["Condition"] + "(?!=" + row["Excluded"].split(row["Condition"])[-1] + ")", line))
     ...:              if var > most:
     ...:                  most = var
     ...:                  mostl = line[:3]
     ...:     answer = most
     ...:     TT = ""
     ...:     TT += '# In this exercise, you need to identify the line number (e.g., "1.1", or "5.4") of the poem line that meets this condition:\n\n#Which line has '
     ...:     TT += str(answer) + " letters '" + row["Condition"] + "', not counting when that letter is in the word " + row["Excluded"]
     ...:     TT += "\n\n# If several lines meet this condition, indicate only the first one. This will require you to use loops, conditions, regexes, and some functions
     ...:  such as len(). (Or maybe not, there are plenty of ways to do it.). \n#Your will need to load the poem with the code below, and you final answer should be a va
     ...: riable called 'answer' \n#that has the line number (of the format \d.\d - see the regex module). Remember that you can index a string."
     ...:     TT += '\n\nf = open("../Data/poem.txt", "r", encoding="latin1")\npoem = f.read()'
     ...:     most = 0
     ...:     mostl = ""
     ...:     for line in poem.split("\n"):
     ...:         var = len(re.findall(row["Condition"] + "(?!=" + row["Excluded"].split(row["Condition"])[-1] + ")", line))
     ...:         if var > most:
     ...:             most = var
     ...:             mostl = line[:3]
     ...:     answer = most, mostl
     ...:     df.at[index, "Answer"] = answer
     ...:     with open(row["Handle PA"] + " - Exercise1.py", "w") as f:
     ...:         f.write(TT)
     ...:     print(answer)
     ...: df.to_csv("Students.csv", index=False)

bash = for homedir in /home/!(DamienCh); do     cp "${homedir##*/} - Exercise1.py" $homedir/LDA/Scripts; done 